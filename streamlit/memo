
最短経路長、クラスター係数のヒストグラムの横軸をNにする。

ネットワークのアタック耐性を定式化したい。
    →完全グラフのアタック耐性は自明に最大
    完全グラフをアタック耐性の基準にしてみる？
    アタック耐性を0~1で表現して、完全グラフは1になる？

    連結成分が完全に0になるまでアタックを続けても不毛なので、閾値を設定しある程度のところで切り上げる。
    とか、大規模な崩壊が起きた時点で（崩壊量が0.1以上変動したとき?）攻撃は達成したと解釈する？


    攻撃戦略
    1.ランダム障害
    2.標的型攻撃
    3.カット点、辺の除去
    4.ハブの無力化（ハブの周辺ノードの除去）
    

ネットワークへのアタック

ネットワークを選択。（select_model）
↓
攻撃戦略を選択。（select_strategy）
↓
崩壊の様子をヒストグラムで表示。

N=1000以上の中心性の計算はおぞましいほど時間がかかるから別のグラフ系ライブラリの「igraph」を使用する。
networkxでグラフ作成→igraphに変換し計算→networkxに変換→matplotlibで可視化


指標名	メソッド名	説明
次数中心性	degree()	ノードの接続数（入次数/出次数も可能）
媒介中心性	betweenness()	ノードが他ノード間の最短経路に登場する頻度
固有ベクトル中心性	eigenvector_centrality()	重要なノードとつながるノードほどスコアが高い
クローズネス中心性	closeness()	他の全ノードへの距離の逆数（近接性）
ページランク	pagerank()	Google の PageRank に基づく影響力指標
ハーモニック中心性	harmonic_centrality()	クローズネスの代替（非連結グラフ対応）
ローカルクラスター係数	transitivity_local_undirected()	ノードの近傍の密結合度（完全な中心性ではないが関連指標）
ボンベラシ中心性	bonpow()	Bonacich power centrality：固有ベクトル中心性の一般化
潜在的中心性 (Katz 中心性)	authority_score() や hub_score()	HITSアルゴリズムベース（主に有向グラフで使用